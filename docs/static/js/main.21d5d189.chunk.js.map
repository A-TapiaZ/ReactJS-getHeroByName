{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroScreen.js","selectors/getHeroesById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","type","payload","name","replace","Navbar","user","useHistory","to","activeClassName","exact","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","HeroScreen","heroeId","useParams","find","chara","split","pj","idx","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","value","useForm","searchText","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","prototypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21d5d189.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n// Esto va a enviar por todos mis componentes el estado de loggued\r\nexport const AuthContext=createContext();","// Este objeto va a contener todos los types de mi apliacacion.\r\n\r\nexport const types = {\r\n  login: '[auth] login',\r\n  logout: '[auth] logout'\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\nconst LoginScreen = ({history}) => {\r\n\r\n  const {dispatch}= useContext(AuthContext)\r\n\r\n  const handleLogin =() => {\r\n    // History es una propiedad que trae por defecto el react router dom, este se puede desestructurar como un prop cualquiera. \r\n    // La funcion push permite redireccionar a una pagina, el problema es que me deja devolver y en el caso de un login no seria productivo devolverme a la pantalla del login de nuevo despues de haberme logueado.  \r\n    // history.push(\"/\")\r\n\r\n    const lastPath= localStorage.getItem('lastPath') || '/'\r\n    \r\n    const newState={\r\n      name:'Alejandro',\r\n    }\r\n    \r\n    dispatch({\r\n      type: types.login,\r\n      payload: newState,\r\n    })\r\n    \r\n    // Para evitar lo de regresar a la pantalla de login, despues de haberme logueado, usamos replace el cual me \"forzara\" a regresar a la pantalla especificada, a menos que en el caso de login, le haya dado a \"Logout\" para salir.\r\n    history.replace(lastPath) \r\n\r\n  } \r\n  \r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Login screen</h1>\r\n      <hr/>\r\n\r\n      <button\r\n        className= \"btn btn-primary\"\r\n        onClick={handleLogin}\r\n      \r\n      >Login</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types'\r\n\r\nexport const Navbar = () => {\r\n\r\n    // user:{name}, extrae la propiedad name por destructuring\r\n    const {user:{name}, dispatch} = useContext(AuthContext)\r\n\r\n    // Este es un hook propio de react-router-dom, lo que pasa es que navbar al no ser una ruta (Route) en el dashboard (dirigirse al componente dashboard para verlo), no hereda el prop de history, por lo que nos toca heredarlo de otra forma, y es por medio del hook ya mencionado. \r\n    // El Router funciona como un contextProvider, por eso podemos acceder al hook de useHistory.\r\n    const history=useHistory()\r\n\r\n    const handleLogout = () => {\r\n        \r\n        dispatch({\r\n            type:types.logout,\r\n        })\r\n\r\n        history.replace('/')\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                HEROES-APP\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    \r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span \r\n                        className=\"nav-item nav-link text-info\" \r\n                        >{name}\r\n                    </span>\r\n\r\n                    <button \r\n                        \r\n                        className=\"btn nav-item nav-link\" \r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heroes = [\r\n  {\r\n      'id': 'dc-batman',\r\n      'superhero':'Batman', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Bruce Wayne',\r\n      'first_appearance':'Detective Comics #27',\r\n      'characters':'Bruce Wayne'\r\n  },\r\n  {\r\n      'id': 'dc-superman',\r\n      'superhero':'Superman', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Kal-El',\r\n      'first_appearance':'Action Comics #1',\r\n      'characters':'Kal-El'\r\n  },\r\n  {\r\n      'id': 'dc-flash',\r\n      'superhero':'Flash', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Jay Garrick',\r\n      'first_appearance':'Flash Comics #1',\r\n      'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n  },\r\n  {\r\n      'id': 'dc-green',\r\n      'superhero':'Green Lantern', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Alan Scott',\r\n      'first_appearance':'All-American Comics #16',\r\n      'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n  },\r\n  {\r\n      'id': 'dc-arrow',\r\n      'superhero':'Green Arrow', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Oliver Queen',\r\n      'first_appearance':'More Fun Comics #73',\r\n      'characters':'Oliver Queen'\r\n  },\r\n  {\r\n      'id': 'dc-wonder',\r\n      'superhero':'Wonder Woman', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Princess Diana',\r\n      'first_appearance':'All Star Comics #8',\r\n      'characters':'Princess Diana'\r\n  },\r\n  {\r\n      'id': 'dc-martian',\r\n      'superhero':'Martian Manhunter', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'J\\'onn J\\'onzz',\r\n      'first_appearance':'Detective Comics #225',\r\n      'characters':'Martian Manhunter'\r\n  },\r\n  {\r\n      'id': 'dc-robin',\r\n      'superhero':'Robin/Nightwing', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Dick Grayson',\r\n      'first_appearance':'Detective Comics #38',\r\n      'characters':'Dick Grayson'\r\n  },\r\n  {\r\n      'id': 'dc-blue',\r\n      'superhero':'Blue Beetle', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Dan Garret',\r\n      'first_appearance':'Mystery Men Comics #1',\r\n      'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n  },\r\n  {\r\n      'id': 'dc-black',\r\n      'superhero':'Black Canary', \r\n      'publisher':'DC Comics', \r\n      'alter_ego':'Dinah Drake',\r\n      'first_appearance':'Flash Comics #86',\r\n      'characters':'Dinah Drake, Dinah Lance'\r\n  },\r\n  {\r\n      'id': 'marvel-spider',\r\n      'superhero':'Spider Man', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Peter Parker',\r\n      'first_appearance':'Amazing Fantasy #15',\r\n      'characters':'Peter Parker'\r\n  },\r\n  {\r\n      'id': 'marvel-captain',\r\n      'superhero':'Captain America', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Steve Rogers',\r\n      'first_appearance':'Captain America Comics #1',\r\n      'characters':'Steve Rogers'\r\n  },\r\n  {\r\n      'id': 'marvel-iron',\r\n      'superhero':'Iron Man', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Tony Stark',\r\n      'first_appearance':'Tales of Suspense #39',\r\n      'characters':'Tony Stark'\r\n  },\r\n  {\r\n      'id': 'marvel-thor',\r\n      'superhero':'Thor', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Thor Odinson',\r\n      'first_appearance':'Journey into Myster #83',\r\n      'characters':'Thor Odinson'\r\n  },\r\n  {\r\n      'id': 'marvel-hulk',\r\n      'superhero':'Hulk', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Bruce Banner',\r\n      'first_appearance':'The Incredible Hulk #1',\r\n      'characters':'Bruce Banner'\r\n  },\r\n  {\r\n      'id': 'marvel-wolverine',\r\n      'superhero':'Wolverine', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'James Howlett',\r\n      'first_appearance':'The Incredible Hulk #180',\r\n      'characters':'James Howlett'\r\n  },\r\n  {\r\n      'id': 'marvel-daredevil',\r\n      'superhero':'Daredevil', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Matthew Michael Murdock',\r\n      'first_appearance':'Daredevil #1',\r\n      'characters':'Matthew Michael Murdock'\r\n  },\r\n  {\r\n      'id': 'marvel-hawkeye',\r\n      'superhero':'Hawkeye', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Clinton Francis Barton',\r\n      'first_appearance':'Tales of Suspense #57',\r\n      'characters':'Clinton Francis Barton'\r\n  },\r\n  {\r\n      'id': 'marvel-cyclops',\r\n      'superhero':'Cyclops', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Scott Summers',\r\n      'first_appearance':'X-Men #1',\r\n      'characters':'Scott Summers'\r\n  },\r\n  {\r\n      'id': 'marvel-silver',\r\n      'superhero':'Silver Surfer', \r\n      'publisher':'Marvel Comics', \r\n      'alter_ego':'Norrin Radd',\r\n      'first_appearance':'The Fantastic Four #48',\r\n      'characters':'Norrin Radd'\r\n  }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeroCard = ({\r\n  id,\r\n  superhero,\r\n  publisher,\r\n  alter_ego,\r\n  first_appearance,\r\n  characters,\r\n\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"card ms-3\" style={{maxWidth:540}} >\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-md-4\">\r\n          <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero}/>\r\n          \r\n          \r\n        </div>  \r\n        <div className=\"col-md-8\">\r\n          <div className= \"card-body\">\r\n            <h5 className=\"card-title\">{superhero} </h5>\r\n            <p className=\"card-text\">{alter_ego}</p>\r\n            {\r\n              (alter_ego!==characters) && <p className=\"card-text\">{characters}</p>\r\n            }\r\n            <p className=\"card-text\"> <small className=\"text-muted\">{first_appearance}</small></p>\r\n\r\n            {/* RECORDAR QUE PARA PONER UN ENLACE EN REACT DEBE SER CON LINK */}\r\n            <Link className=\"btn btn-primary\" to={`./hero/${id}`}>More !</Link>\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroCard\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport HeroCard from './HeroCard'\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n  // Si hiciera cualquier cosa, que volviera a disparar mi render, pero la informacion no cambiara, se volveria a ejecutar la funcion paara obtener la informacion de los heroes y no cambiaria nada, respecto a la informacion que trae la funcion. Para evitar que se vuelva a hacer un llamado a la funcion que trae la info, sin tener la necesidad, pódemos usar el useMemo, el cual dependiendo de la \"subscripcion\" evita que se vuelva a ejecutar nuestra funcion, si es que no detecta un cambio.\r\n\r\n  // Forma nueva, si detecta un cambio en el publisher, vuelve y llama a la funcion para actualizar la informacion.\r\n  const heroes= useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n  // Forma antigua que cada vez que renderice de nuevo, vuelve a disparar la funcion. \r\n  // const heroes = getHeroesByPublisher(publisher)\r\n   \r\n  return (\r\n    <div className=\"card-columns animate__animated animate__fadeIn\">\r\n        {\r\n          heroes.map(hero => (\r\n                        \r\n            <HeroCard\r\n              key={hero.id}\r\n              // No se porque, pero pasarle las propiedades de hero lo tengo que enviar asi\r\n              {...hero}\r\n            /> \r\n\r\n          ))\r\n        }\r\n    </div >\r\n  ) \r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n  const validPublishers=['DC Comics', 'Marvel Comics'];\r\n\r\n  if (!validPublishers.includes(publisher)) {\r\n    throw new Error(`Publisher \"${publisher}\" no existe`);\r\n  }\r\n\r\n  return heroes.filter(hero => hero.publisher === publisher);\r\n\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nconst MarvelScreen = () => {\r\n  return (\r\n    <div>\r\n    <h1>Marvel Screen</h1>\r\n\r\n    <HeroList publisher={'Marvel Comics'}/>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarvelScreen\r\n","import React, { useMemo } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { getHeroesById } from '../../selectors/getHeroesById'\r\n\r\nconst HeroScreen = ({history}) => {\r\n\r\n  // Existe un hook que extrae los parametros que vienen por url, unico y exclusivo de react router.\r\n  const {heroeId} = useParams()\r\n\r\n\r\n  // Forma nueva, si detecta un cambio en el publisher, vuelve y llama ala funcion para actualizar la informacion. (Revisar HEROLIST.JS)\r\n  const hero= useMemo(() => getHeroesById(heroeId), [heroeId])\r\n\r\n  // Forma antigua que cada vez que renderice de nuevo, vuelve a disparar la funcion. \r\n  // const hero= getHeroesById(heroeId);\r\n\r\n  // En caso tal que lo que ingrese el usuario en la direccion web no sea valido (escriba una direccion que no exista), vamos a ver que como no retorno ningun hero, inmediatamente lo vamos a redireccionar a la pagina web principal. Es practicamente lo mismo que se hizo en el DashBoard con el redirect.\r\n  if (!hero) { return <Redirect to=\"/\"/> }\r\n\r\n  const { \r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n  }=hero;\r\n\r\n  // Separe los nombres por coma para mostrarlos en forma de lista\r\n  const chara= characters.split(\",\")\r\n\r\n  // Como habiamos mencionado en el componente \"login\", el history es un prop por defecto que contiene el router dom. En esta funcion lo que hacemos es comprobar que exista un historial cosa, que si apretamos el boton return, no nos vaya a sacar de la pagina, sino que nos lleve a la pagina ppal de la pagina (valga la redundancia).\r\n  const handleReturn= () => {\r\n    if (history.length <= 2) {\r\n      history.push(\"/\")\r\n    } else {\r\n      history.goBack()\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      \r\n      <div className=\"col-4\">\r\n        <img \r\n          alt={superhero}\r\n          className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n          src={`../assets/heroes/${heroeId}.jpg`}\r\n        ></img>\r\n      </div>\r\n\r\n      <div className=\"col-8\">\r\n        <h3>{superhero}</h3>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\"><b>Alterego:</b> {alter_ego}</li>\r\n          <li className=\"list-group-item\"><b>Publisher:</b> {publisher}</li>\r\n          <li className=\"list-group-item\"><b>First appearance:</b> {first_appearance}</li>\r\n\r\n        </ul>\r\n\r\n        <h5>Characters</h5>\r\n\r\n        <ul>\r\n            {/* Me costo medio huevo saber como imprimir una lista con map, pero aquí esta !!!! */}\r\n          { chara.map((pj,idx) => (<li key={idx}>{pj}</li>))}\r\n        </ul>\r\n\r\n\r\n        <button \r\n          className=\"btn btn-outline-info mt-4\"\r\n          onClick={handleReturn}\r\n        >Return</button>\r\n      </div>    \r\n    \r\n    \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroScreen\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = (id) => {\r\n\r\n  return heroes.find(hero => hero.id === id);\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\nconst DcScreen = () => {\r\n  return (\r\n    <div>\r\n      <h1>DC Screen</h1>\r\n\r\n      <HeroList publisher={'DC Comics'}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DcScreen\r\n","import React from 'react'\r\nimport queryString from 'query-string'\r\nimport HeroCard from '../heroes/HeroCard';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nconst SearchScreen = ({history}) => {\r\n\r\n  const location = useLocation();\r\n  // instalamos la libreria queryString de npm, la cual toma la direccion web y nos retorna un objeto que contiene las query que se encuentren en la direccion web busqueda\r\n  // console.log(queryString.parse(location.search));\r\n  \r\n  //ponemos \" ='' \" para que su valor sea por defecto '' (por defecto retorna undefined y nos daria problemas), en caso de que la direccion web no contenga queries.  \r\n  const {q=''}= queryString.parse(location.search);\r\n\r\n  \r\n  const [formValues, handleInputChange]= useForm({\r\n    // pasamos como valor por defecto lo que sea que venga en la query\r\n    searchText:q\r\n  });\r\n  \r\n  const {searchText} = formValues;\r\n\r\n  // Esta instruccion la usamos para que cada vez que ingrese una letra, el componente no se renderice de nuevo. La verdad a mi me gusta que cada vez que vaya escribiendo una letra este se vaya filtrando en tiempo real, por eso lo dejo así, pero si quiero que mi busqueda sea mas eficiente deberia usar useMemo.\r\n  // useMemo(() => getHeroesByName(q), [q])\r\n  // Llamamos la funcion que creamos para filtrar por lo que sea que busquen en el buscador\r\n  const heroesFiltered= getHeroesByName(searchText);\r\n  \r\n  const handleSearch= (e) => {\r\n    e.preventDefault();\r\n    history.push(`?q=${searchText}`);\r\n  } \r\n  \r\n  return (\r\n    <div>\r\n      <h1>Search Screen</h1>\r\n      <hr/>\r\n\r\n      <div className= \"row\" >\r\n        \r\n        <div className= \"col-5\">\r\n          <h4>Search Form</h4>\r\n          <hr/>\r\n\r\n          <form onSubmit={handleSearch}>\r\n\r\n            <input \r\n              type=\"text\"\r\n              placeholder=\"Find ur hero\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              value={searchText}\r\n              onChange={handleInputChange}\r\n              />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn m-1 btn-block btn-outline-primary\" \r\n            >\r\n              Search \r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-7\">\r\n          <h4>Results</h4>\r\n\r\n          {heroesFiltered.map(hero => (\r\n            <HeroCard\r\n              key={hero.id}\r\n              {...hero}\r\n            />\r\n          )\r\n          \r\n          )}\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchScreen\r\n","import { useState } from \"react\"; \r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n  const [values, setValues] = useState(initialState)  \r\n\r\n  const reset = () => {\r\n    setValues(initialState)\r\n  }\r\n  \r\n\r\n  const handleInputChange= ({target}) => {\r\n    // console.log(target);\r\n    setValues({\r\n      ...values,\r\n      [target.name]:target.value\r\n    })\r\n  }\r\n\r\n  return [values, handleInputChange, reset]\r\n  \r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\n\r\nexport const getHeroesByName = (name='') => {\r\n  \r\n  if (name==='') {\r\n    return heroes;\r\n  }\r\n  return (\r\n    heroes.filter((hero) => (\r\n      hero.superhero.toLocaleLowerCase().includes(name)\r\n    )) \r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport MarvelScreen from '../components/marvel/MarvelScreen'\r\nimport HeroScreen from '../components/heroes/HeroScreen'\r\nimport DcScreen from '../components/dc/DcScreen'\r\nimport SearchScreen from '../components/search/SearchScreen'\r\n\r\n\r\n// El dashboardRoutes es un componente como cualquiera, la unica diferencia que tiene con el AppRouter, es que NO contiene el Router, solo contiene un switch\r\nconst DashboardRoutes = () => {\r\n  return (\r\n    <>\r\n      <Navbar/>\r\n\r\n      <div className= \"container mt-2\">\r\n        <Switch>\r\n          <Route exact path=\"/marvel\" component={MarvelScreen}/>\r\n          <Route exact path=\"/hero/:heroeId\" component={HeroScreen}/>\r\n          <Route exact path=\"/dc\" component={DcScreen}/>\r\n          <Route exact path=\"/search\" component={SearchScreen}/>\r\n\r\n          <Redirect to=\"/marvel\"/>\r\n        </Switch>\r\n\r\n      </div> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashboardRoutes\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n  isAuthenticated,\r\n  component:Component,\r\n  ...rest\r\n}) => {\r\n\r\n  localStorage.setItem('lastPath', rest.location.pathname);\r\n  \r\n  return (\r\n    <Route {...rest}\r\n      component={ (props) => (\r\n        isAuthenticated\r\n        ? <Component{...props}/> \r\n        : <Redirect to=\"/login\"/>\r\n\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.prototypes={\r\n  isAuthenticated:PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\nexport default PrivateRoute\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({\r\n  isAuthenticated,\r\n  component:Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component={ (props) => (\r\n        !isAuthenticated\r\n        ? <Component{...props}/> \r\n        : <Redirect to=\"/\"/>\r\n\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.prototypes={\r\n  isAuthenticated:PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\nexport default PublicRoute\r\n","import React, { useContext } from \"react\";\r\nimport {\r\nBrowserRouter as Router,\r\nSwitch,\r\n} from \"react-router-dom\";\r\nimport LoginScreen from \"../components/login/LoginScreen\";\r\nimport DashboardRoutes from \"./DashboardRoutes\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\n// Sistema de rutas ppal\r\nconst AppRouter = () => {\r\n\r\n  const {user} = useContext(AuthContext);\r\n\r\n  return (\r\n     \r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n          exact \r\n          path=\"/login\" \r\n          component={LoginScreen}\r\n          isAuthenticated={user.logged}\r\n          />\r\n          \r\n          \r\n          {/* Para este caso el route no tiene que tener la propiedad exact ya que como contiene mas direcciones dentro, no funcionaría */}\r\n          {/* Ojo a donde lo estoy enviando, es otro componente creado para evitar que un usuario no registrado ingrese a las rutas \"privadas\" */}\r\n\r\n          <PrivateRoute \r\n            path=\"/\" \r\n            component={DashboardRoutes}\r\n            isAuthenticated={user.logged}\r\n          />\r\n        \r\n        \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default AppRouter\r\n","// Un reduccer no es mas que una simple funcion pura! \r\n\r\nimport { types } from \"../types/types\";\r\n\r\n// const state={\r\n//   name:'Fernando',\r\n//   logged:true\r\n// }\r\n\r\nexport const authReducer = (state={}, action) => {\r\n\r\n  \r\n  switch (action.type) {\r\n    case types.login:\r\n      return{\r\n        ...action.payload,\r\n        logged:true\r\n      }\r\n    case types.logout:\r\n      return{\r\n        logged:false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n","import React, { useReducer, useEffect } from 'react'\r\nimport AppRouter from './routers/AppRouter'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\n\r\n\r\n// Este es el estado inicial del logged, va a buscar al localstorage a ver si existe un usuario logueado, de lo contrario solo se inicializara con el estado logged en false. \r\n// Vale la pena aclarar que esto se hace así por el momento porque esta aplicacion no tiene Backend, solo esta lo que usamos en el navegador.\r\nconst init= () => {\r\n  return JSON.parse(localStorage.getItem('user')) || {logged:false}\r\n}\r\n\r\n\r\nconst HeroesApp = () => {\r\n  \r\n  const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n  useEffect(() => {\r\n    \r\n    localStorage.setItem('user',JSON.stringify(user));\r\n\r\n  }, [user])\r\n\r\n  return (\r\n    <>\r\n      <AuthContext.Provider value={{user,dispatch}}>\r\n        <AppRouter/>\r\n      </AuthContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeroesApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HeroesApp from './HeroesApp';\n\n\nReactDOM.render(\n\n  <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}